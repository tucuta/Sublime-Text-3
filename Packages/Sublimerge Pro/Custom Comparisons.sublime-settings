/**
 * This file contains custom comparisons examples. All of them are designed for Git, however you can define your own for SVN as well.
 * If something can not be easily done with VCS commands, you can always create some external script which will properly format an
 * output to be parsed by Sublimerge.
 *
 * To make a comparison working only for SVN, you have to set 'requires: svn' instead 'requires: git'.
 *
 * Predefined variables:
 *
 * {config:<config_key>} - returns a configuration value for given key
 * {sublimerge:repo_root} - root directory where '.svn' or '.git' is located
 * {sublimerge:current_file} - full path of active file, i.e. '/Users/workspace/my_project/something.js'
 * {sublimerge:current_file_dir} - full path of  active file owning directory, i.e. '/Users/workspace/my_project'
 * {sublimerge:current_file_name} - name of active file, i.e. 'something.js'
 */

{
    "custom_comparisons": [
        /*
         * Custom Git comparison. Displays quick panel with modified files and allows to compare working copy to HEAD to see uncommited changes.
         */
        {
            "name": "Show Uncommited Changes...", //comparison name
            "requires": "git", //What does it require. Currently 'git', 'svn' or null (if doesn't require any of VCS)
            "steps": [ //comparison is divided into steps. You can define more steps when needed.
                {
                    "quick_panel": { //Displays a Quick Panel with given attributes
                        "name": "modified_file", //Quick Panel name. Used to populate a variable 'modified_file' with seleted item value
                        "source": { //Data source
                            "execute": { //Execute a shell command
                                "command": "{config:git_executable_path} status --porcelain --untracked-files=no",
                                "directory": "{sublimerge:repo_root}" //Set a command working directory
                            },
                            "item": { //Single item extractor
                                "regexp": "^\\s+M\\s+(.*)$", //Regular expression to parse each output line
                                "caption": ["@1"], //Caption is an array. Each item is another line. @n - placeholder for regular expression match
                                "value": "@1" //Value must be a single string
                            },
                            "empty_message": "There are no uncommited changes." //Message to be displayed when data source is empty (no items created)
                        }
                    }
                },
                {
                    "compare": { //Executes file comparison
                        "execute": { //Execute a shell command. Please note about 'modified_file' variable which we defined in previous step
                            "command": "{config:git_executable_path} show HEAD:\"./{modified_file}\" >> \"{sublimerge:repo_root}/{modified_file}@HEAD\"",
                            "directory": "{sublimerge:repo_root}"
                        },
                        "left": { //Left file
                            "file": "{sublimerge:repo_root}/{modified_file}", //Full file path
                            "temporary": false //This file is our working copy, so is not temporary
                        },
                        "right": {
                            "file": "{sublimerge:repo_root}/{modified_file}@HEAD",
                            "temporary": true //This file is generated by previous shell command, so remove it automatically after use
                        }
                    }
                }
            ]
        },

        /*
         * Custom Git comparison. Allows to compare your working file with the same file in another branch
         */
        {
            "name": "Compare {sublimerge:current_file_name} to Other Branch...",
            "requires": "git",
            "steps": [
                {
                    "quick_panel": {
                        "name": "get_branch",
                        "source": {
                            "execute": {
                                "command": "{config:git_executable_path} branch",
                                "directory": "{sublimerge:current_file_dir}"
                            },
                            "item": {
                                "regexp": "^(\\*?\\s+)([^\\(]+)$",
                                "caption": ["@1@2", "{sublimerge:current_file_name} in @2"],
                                "value": "@2"
                            },
                            "empty_message": "There are no branches."
                        }
                    }
                },
                {
                    "compare": {
                        "execute": {
                            "command": "{config:git_executable_path} show \"{get_branch}\":\"./{sublimerge:current_file_name}\" >> \"{sublimerge:current_file}@{get_branch}\"",
                            "directory": "{sublimerge:current_file_dir}"
                        },

                        "left": {
                            "file": "{sublimerge:current_file}",
                            "temporary": false
                        },

                        "right": {
                            "file": "{sublimerge:current_file}@{get_branch}",
                            "temporary": true
                        }
                    }
                }
            ]
        }

        /*
         * Custom Git comparison. Allows to run custom Git command and compare working file with command's output
         */
        // ,{
        //     "name": "Custom Git Command...",
        //     "requires": "git",
        //     "steps": [
        //         {
        //             "prompt": {
        //                 "name": "args",
        //                 "caption": "{config:git_executable_path}"
        //             }
        //         },
        //         {
        //             "compare": {
        //                 "execute": {
        //                     "command": "{config:git_executable_path} {args} >> \"{sublimerge:current_file}@custom\"",
        //                     "directory": "{sublimerge:current_file_dir}"
        //                 },

        //                 "left": {
        //                     "file": "{sublimerge:current_file}",
        //                     "temporary": false
        //                 },

        //                 "right": {
        //                     "file": "{sublimerge:current_file}@custom",
        //                     "temporary": true
        //                 }
        //             }
        //         }
        //     ]
        // }
    ]
}